pipeline {
    agent none

    stages {
        stage('build') {
            agent {
                docker {
                    image 'node:19.0-alpine3.16'
                }
            }
            when{
                changeset "**/result/**"
            }
            steps {
                echo 'Compiling result app'
                dir('result') {
                    sh 'npm install'
                }
            }
        }
        stage('test') {
            agent {
                docker {
                    image 'node:19.0-alpine3.16'
                }
            }
            when{
                changeset "**/result/**"
            }
            steps {
                echo 'Running Unit Tests on result app'
                dir('result') {
                    sh 'npm install'
                    sh 'npm test'
                }
            }
        }
        stage('docker-package') {
            agent any
            when{
                changeset "**/result/**"
                branch "master"
            }
            steps {
                echo 'Packaging result app with docker'
                script {
                    docker.withRegistry('', 'dockerlogin') {
                        def resultImage = docker.build("irbb/result:v${env.BUILD_ID}", "./result")
                        resultImage.push()
                        resultImage.push("${env.BRANCH_NAME}")
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Build pipeline for result is completed...'
        }
        failure {
            slackSend (channel: "instavote-cd", message: "Build failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        success {
            slackSend (channel: "instavote-cd", message: "Build success - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
}
